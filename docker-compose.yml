services:
  postgres:
    image: 'postgres:15.5-alpine3.18'
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ./backend/data:/var/lib/postgresql/data
    profiles:
      - "migration"
      - "backend"

  app:
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
    restart: unless-stopped
    ports:
      - 8080:8080
    tty: true
    profiles:
      - "backend"

  flyway:
    image: redgate/flyway:10.0.1-alpine
    env_file:
      - .env
    depends_on:
      - postgres
    command: -url=jdbc:postgresql://postgres:5432/${POSTGRES_DB} -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} -connectRetries=60 migrate
    volumes:
      - ./backend/src/main/resources/db.migration.postgresql:/flyway/sql
    profiles:
      - "migration"

  seaweedfs-master:
    image: chrislusf/seaweedfs:3.59
    ports:
      - 9333:9333
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-q",
          "--spider",
          "seaweedfs-master:9333/cluster/healthz",
        ]
      interval: 5s
      timeout: 30s
      retries: 3
    command: "master -ip=seaweedfs-master"
    profiles:
      - "backend"

  seaweedfs-volume:
    image: chrislusf/seaweedfs:3.59
    ports:
      - 9334:9334
    command: 'volume -mserver="seaweedfs-master:9333" -port=9334 -dir=/data/seaweedfs/volume -ip=seaweedfs-volume'
    volumes:
      - ./backend/uploads:/data/seaweedfs/volume
    depends_on:
      seaweedfs-master:
        condition: service_healthy
    profiles:
      - "backend"

  nginx:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 80:80
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/logs/nginx:/usr/log/
    depends_on:
      - app
      - seaweedfs-master
      - seaweedfs-volume
    profiles:
      - "backend"
